module.exports=class{get templateChar(){return"x"}get nonTemplateValueRegExp(){return/\D/g}get template(){return this._template}set template(e){if("string"!=typeof e)throw"Template must be a string";this._prefixes[0]=e.split(this.templateChar)[0],this._template=e.substring(e.indexOf(this.templateChar)),this._templateForHiddenInput=this._template}get currentPrefix(){return-1==this._prefixIndex?"":this._prefixes[this._prefixIndex]}set prefixes(e){if(!Array.isArray(e)&&0==e.length)throw"prefixes must be a non empty Array!";if(!e.every((e=>"string"==typeof e)))throw"Possible prefix must be a string!";this._prefixes=[this._prefixes[0]].concat(e)}_initEvents(){this._inputElement.addEventListener("keyup",this.onKeyUp.bind(this)),this._inputElement.addEventListener("focus",this.onFocus.bind(this)),this._inputElement.addEventListener("blur",this.onBlur.bind(this))}_initHiddenInput(e){this._clonedInput=this._inputElement.cloneNode(!0),this._inputElement.parentElement.insertBefore(this._clonedInput,this._inputElement),this._inputElement.setAttribute("name",""),this._clonedInput.style.display="none",this._clonedInput.setAttribute("id",""),this._templateForHiddenInput=e||this.template}constructor(e,t){if(e){if("string"==typeof e){if(this._inputElement=document.getElementById(e),!this._inputElement)throw"There is no element with id: "+e}else{if("object"!=typeof e||"[object HTMLInputElement]"!=Object.prototype.toString.call(e))throw"Unknown input element type";this._inputElement=e}t.showPrefixOnFocus&&(this.showPrefixOnFocus=!0),t.createHiddenInput&&this._initHiddenInput(t.templateForHidden),this._initEvents()}if(this._prefixIndex=0,this._prefixes=[],!t.template)throw"Template must be specified";this.template=t.template,t.prefixes&&(this._prefixes=this._prefixes.concat(t.prefixes))}getUniqueMaxVal(e){let t=-1,i=-1,n=!0;for(let s=0;s<e.length;s++)e[s]>t?(t=e[s],i=s,n=!0):t==e[s]&&(n=!1);return{value:t,index:n?i:-1}}calcPrefixMatchCount(e){let t=e.replace(this.nonTemplateValueRegExp,""),i=[];return this._prefixes.map((e=>e.replace(this.nonTemplateValueRegExp,""))).forEach((e=>{let n=0;for(let i=0;i<Math.min(e.length,t.length)&&e[i]==t[i];i++)n++;i.push(n)})),i}getSuitablePrefixIndex(e){if(!e||!e.trim())return-1;let t=this.getUniqueMaxVal(this.calcPrefixMatchCount(e));return 0===t.value?0:t.index}_updatePossiblePrefix(e){(1!=this._prefixes.length||this._prefixes[0])&&(this._prefixIndex=this.getSuitablePrefixIndex(e),this._inputElement&&this._inputElement.dispatchEvent(new CustomEvent("tf.p.onchange",{bubbles:!0,detail:this._prefixIndex})))}pushPostfixIfNeeded(e){let t=this.template.lastIndexOf(this.templateChar);return this.currentPrefix.length+t+1==e.length?e+this.template.slice(t+1):e}removePrefix(e){let t=this.currentPrefix.replace(this.nonTemplateValueRegExp,""),i=0;for(;e[i]&&t[i]===e[i];)i++;return i>=e.length?"":e.substring(i)}formatText(e){let t=this.removePrefix(e.replace(this.nonTemplateValueRegExp,"")),i="";for(let e=0,n=0;e<this.template.length&&n<t.length;e++)i+=this.template[e]!=this.templateChar?this.template[e]:t[n++];return this.pushPostfixIfNeeded(this.currentPrefix+i)}_getFirstTemplateMismatch(e){let t=this.getSuitablePrefixIndex(e),i=this._prefixes[t]+this.template;for(let t=0;t<Math.min(e.length,i.length);t++)if(e[t]!==i[t]&&(i[t]!==this.templateChar||this.nonTemplateValueRegExp.test(e[t])))return t;return e.length!=i.length?Math.min(e.length,i.length):-1}isPartiallyMatchTemplate(e){if(e){let t=this._getFirstTemplateMismatch(e);return t>=e.length||-1==t}return!1}isMatchTemplate(e){return e&&-1==this._getFirstTemplateMismatch(e)}isInputValueValid(){if(this._inputElement)return this.isMatchTemplate(this._inputElement.value);throw"There is no input element"}_processNewInput(e,t){return t&&this.isPartiallyMatchTemplate(e)?e:(this._updatePossiblePrefix(e),this.formatText(e))}_processNewInputEvent(e){return this._processNewInput(e.target.value,8===e.keyCode||46===e.keyCode)}getRawValue(e){return e?e.replace(this.nonTemplateValueRegExp,""):""}onKeyUp(e){this._inputElement.value=this._processNewInputEvent(e),this._clonedInput&&(this._clonedInput.value=this._inputElement.value.replace(this.nonTemplateValueRegExp,""))}onFocus(e){this.showPrefixOnFocus&&this._processNewInput(this._prefixes[0]||"",!1)}onBlur(e){this.currentPrefix==this._inputElement.value&&(this._inputElement.value="")}};
